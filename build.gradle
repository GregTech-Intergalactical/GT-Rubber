plugins {
    id "maven-publish"
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply(false)
    id "com.github.johnrengelman.shadow" version "7.0.0" apply(false)
}

architectury {
    minecraft = rootProject.minecraft_version
}

//Print out JVM information so that we know what version is running. Extreamly useful for people to know when helping you.
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

def isCI = System.getenv("GITHUB_ACTION")
def isRELEASE = System.getenv("GITHUB_RELEASE")

subprojects {
    apply plugin: "dev.architectury.loom"
    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:${rootProject.mappings_version}@zip")
        }
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.17.1+build.32:v2"
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact jar
            }
        }
        repositories {
            maven {
                url "file:///${project.projectDir}/mcmodsrepo"
            }
        }
    }
}

allprojects {
    apply plugin: "maven-publish"
    apply plugin: "java"
    apply plugin: "architectury-plugin"


    group = rootProject.maven_group

    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven {
            name = 'parchment'
            url = 'https://maven.parchmentmc.org'
        }
        maven { url 'https://dvs1.progwml6.com/files/maven' }
        //Needed for intellij
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            url "https://www.cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        maven { url "https://maven.shedaniel.me" }
        maven {
            url "https://maven.terraformersmc.com"
            content {
                includeGroup "com.terraformersmc"
            }
        }
        maven {
            // Shedaniel's maven (Architectury API)
            url = "https://maven.architectury.dev"
            content {
                includeGroup "dev.architectury"
            }
        }
        maven {
            url = 'https://maven.blamejared.com'
            name = 'BlameJared Maven'
        }
        maven { url = "https://mvn.devos.one/snapshots/" }
        maven {
            // saps.dev Maven (KubeJS and Rhino)
            url = "https://maven.saps.dev/minecraft"
            content {
                includeGroup "dev.latvian.mods"
            }
        }
        //GT and Felt.
        maven { url 'https://jitpack.io' }
        maven {
            url "https://repo.repsy.io/mvn/trinsdar/gregtech-intergalactical/"
        }
    }

    java {
        withSourcesJar()
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
    }

    if (isCI) {
        version = version + "-" + gitHash()
        println("In CI mode")
    }
}



