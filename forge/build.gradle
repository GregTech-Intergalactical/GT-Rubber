archivesBaseName = "${rootProject.archive_base_name}-forge"
version = "${rootProject.minecraft_version}-${project.mod_version}"

apply plugin: "com.github.johnrengelman.shadow"

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

architectury {
    platformSetupLoomIde()
    forge()
}

dependencies {
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
    modImplementation("com.github.gregtech-intergalactical:antimatter-forge:${antimatter_version}"){
        exclude(group: "com.github.gregtech-intergalactical")
    }
    //modRuntimeOnly("com.github.GregTech-Intergalactical.TesseractAPI:tesseract-forge:${tesseract_version}")
    common(project(path: ":common", configuration: "namedElements"))
    shadowCommon(project(path: ":common", configuration: "transformProductionForge"))
    modRuntimeOnly("mezz.jei:jei-${rootProject.minecraft_version}-forge:${rootProject.jei_version}")
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}